package film_database;

import java.util.List;
import java.util.Scanner;
import java.util.ArrayList;

public class AnimatedMovie extends Movie {
	
	    private ArrayList<String> animators;
	    private int minimalAge;
	    private static List<Movie> movies = new ArrayList<>();

	    public AnimatedMovie(String title, String director, int year, ArrayList<String> animators, int rating, int minimalAge)
	    {
	    	super (title, year, director, rating);
	        this.animators = animators;
	        this.minimalAge = minimalAge;
	    }
	    
	    

	    // getters and setters
	   

		public ArrayList<String> getAnimators() {
			return animators;
		}

		public void setAnimators(ArrayList<String> animators) {
			this.animators = animators;
		}

	    
	    public int getMinimalAge() {
			return minimalAge;
		}

		public void setMinimalAge(int minimalAge) {
			this.minimalAge = minimalAge;
		}

	   
	    public static void addMovie(Scanner scanner) {
	        System.out.println("Enter the title of the film:");
	        String title = scanner.nextLine();

	        System.out.println("Enter the director of the film:");
	        String director = scanner.nextLine();

	        System.out.println("Enter the year of release of the film:");
	        int year = scanner.nextInt();

	        System.out.println("Enter the rating of the film (from 1 to 10): ");
	        int rating = scanner.nextInt();
	        
	        System.out.println("Enter the suggested age for the film: ");
	        int minimalAge = scanner.nextInt();

	        scanner.nextLine(); // Consume the newline character

	        System.out.println("Enter the animators of the film:");
	        ArrayList<String> animators = new ArrayList<>();
	        
	        Movie movie = new AnimatedMovie(title, director, year, animators, rating, minimalAge);
	        movies.add(movie);
	         
	        System.out.println("Film added.");
	        
	    }
	    
	    
	    
		@Override
	    void printMovie(List<Movie> movies)
	    {
	    	for (Movie movie : movies) {
	    		System.out.println(movie.getTitle() + " (" + movie.getYear() + ") directed by " + movie.getDirector());
	    	}
	    }


		
	    	

	  	
}

