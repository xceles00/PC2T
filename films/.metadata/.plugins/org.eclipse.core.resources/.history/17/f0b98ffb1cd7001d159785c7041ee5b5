package film_database;


import java.util.List;
import java.util.*;
import java.util.ArrayList;
import java.util.Scanner;

public class FilmManager {
    
    // List of movies
    private ArrayList<Movie> movies;
    
    // Scanner for user input
    private Scanner input;
    
    // Constructor
    public FilmManager() {
        movies = new ArrayList<Movie>();
        input = new Scanner(System.in);
    }
    
    // Add new movie to the list
    public void addMovie() {
    	System.out.print("Type (1 for animated, 2 for action): ");
        int type = input.nextInt();
        input.nextLine();
        System.out.print("Title: ");
        String title = input.nextLine();
        System.out.print("Director: ");
        String director = input.nextLine();
        System.out.print("Year of release: ");
        int yearOfRelease = input.nextInt();
        input.nextLine();
        
        
        if (type == 1) {
        	System.out.print("Rating (from 1 to 10): ");
            int rating = input.nextInt();
            input.nextLine();
            System.out.print("Recomended age: ");
            int recomendedAge = input.nextInt();
        	movies.add(new AnimatedMovie(title, director, yearOfRelease, rating, recomendedAge));
        	System.out.println("\nMovie added");
        	
        } else if (type == 2) {
        	
        	ArrayList<String> actors = new ArrayList<String>();
            while (true) {
                System.out.print("Actor (or enter to finish): ");
                String actor = input.nextLine();
                if (actor.isEmpty()) {
                    break;
                }
                actors.add(actor);
            }
            
            System.out.print("Rating (from 1 to 5): ");
            int rating = input.nextInt();
            input.nextLine();
            movies.add(new ActionMovie(title, director, yearOfRelease, actors, rating));
            System.out.println("\nMovie added");
        }
        else {
        	System.out.println("Invalid type");
        }
    }
    
    public void printMovies() {
    	for(Movie movie : movies) {
    		System.out.println(movie.getTitle() + " (" + movie.getYearOfRelease() + ") directed by " + movie.getDirector());
    }
    }
}
    
    // Edit an existing movie
    /* public void editMovie() {
        System.out.print("Enter the title of the movie to edit: ");
        String title = input.nextLine();
        for (Movie movie : movies) {
            if (movie.getTitle().equals(title)) {
                System.out.println("Enter the new details:");
                System.out.print("Title: ");
                title = input.nextLine();
                movie.setTitle(title);
                System.out.print("Director: ");
                String director = input.nextLine();
                movie.setDirector(director);
                System.out.print("Year of release: ");
                int year = input.nextInt();
                input.nextLine();
                movie.setYear(year);
                ArrayList<String> actors = new ArrayList<String>();
                while (true) {
                    System.out.print("Actor (or enter to finish): ");
                    String actor = input.nextLine();
                    if (actor.isEmpty()) {
                        break;
                    }
                    actors.add(actor);
                }
                movie.setActors(actors);
                System.out.print("Rating (out of 10): ");
                double rating = input.nextDouble();
                input.nextLine();
                movie.setRating(rating);
                System.out.print("Comments: ");
                String comments = input.nextLine();
                movie.setComments(comments);
                System.out.println("Movie details updated.");
                return;
            }
        }
        System.out.println("Movie not found.");
    }
    
    // Remove a movie from the list
    public void removeMovie() {
        System.out.print("Enter the title of the movie to remove: ");
        String title = input.nextLine();
        for (Movie movie : movies) {
            if (movie.getTitle().equals(title)) {
                movies.remove(movie);
                System.out.println("Movie removed.");
                return;
            }
        }
        System.out.println("Movie not found.");
    }
    
    // Print all movies in the list
    public void printMovies() {
        System.out.println("Movie list:");
        for (Movie movie : movies) {
            System.out.println(movie);
        }
    }*/
    